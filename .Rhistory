select(names) %>%
filter(plid %in% plids)
pl_annex_var_1920 %<>%
select(names) %>%
filter(plid %in% plids)
panel_annual <- rbind(pl_annex_var_0708, pl_annex_var_0809, pl_annex_var_0910, pl_annex_var_1011, pl_annex_var_1112, pl_annex_var_1213, pl_annex_var_1415, pl_annex_var_1516, pl_annex_var_1617, pl_annex_var_1718, pl_annex_var_1819, pl_annex_var_1920)
table(panel_annual$vra, exclude = NULL)
length(unique(panel_annual$plid))
panel_annual %<>%
mutate(vra = ifelse(plid %in% vraplids, 1, 0))
# unique vra plids
vraplids <- unique(c(pl_annex_vra_0708, pl_annex_vra_0809, pl_annex_vra_0910, pl_annex_vra_1011, pl_annex_vra_1112, pl_annex_vra_1213, pl_annex_vra_1415, pl_annex_vra_1516, pl_annex_vra_1617, pl_annex_vra_1718, pl_annex_vra_1819, pl_annex_vra_1920))
panel_annual %<>%
mutate(vra = ifelse(plid %in% vraplids, 1, 0))
table(panel_annual$vra, exclude = NULL)
save.image("annual_annexations.RData")
rm(list = ls())
# Packages:
# Directories:
setwd("~/Google Drive/My Drive/Stanford/QE2")
curdir <- paste0(dirname(rstudioapi::getSourceEditorContext()$path))
savedir <- paste0(curdir, "/../results/")
# homedir <- The smallest directory that contains all input/output folders.
# workdir <- The smallest directory that contains all necessary inputs.
# savedir <- The smallest directory that contains all output folders.
# setwd(paste0(homedir, workdir))
# Import data:
# load(paste0(savedir, "annual_annexations.RData"))
# Parameters:
# Main Script -------------------------------------------------------------
# get environment ready
library("stringr")
library("tidyverse")
library("dplyr")
library("stargazer")
library("fixest")
library("readr")
library("data.table")
library("magrittr")
library("openxlsx")
library("broom")
library("sjPlot")
# plids in the DBR panel ----
panel0020_did <- read_csv("analyticalfiles/panel_prestandard.csv") %>%
filter(time %in% c("2007 to 2013", "2014 to 2020"))
plids <- unique(panel0020_did$plid)
rm(panel0020_did)
# 2007-2008 ----
aa0708 <- read_csv("analyticalfiles/annexedblocks0708dem.csv")
names(aa0708)
# transform this into place-level summaries
# characteristic of all annexable blocks
# diff between annexed and not annexed
place_all <- aa0708 %>%
mutate(incopp = man + ret) %>%
group_by(plid) %>%
dplyr::summarize(pop_total = sum(pop, na.rm = T),
area_total = sum(area, na.rm = T),
nhblack_total = sum(nhblack, na.rm = T),
nhwhite_total = sum(nhwhite, na.rm = T),
h_total = sum(h, na.rm = T),
asian_total = sum(asian, na.rm = T),
native_total = sum(native, na.rm = T),
other_total = sum(other, na.rm = T),
nbmin_total = sum(nbmin, na.rm = T),
vap_total = sum(vap, na.rm = T),
nhblackvap_total = sum(nhbvap),
nhwhitevap_total = sum(nhwvap),
hvap_total = sum(hispvap),
nativevap_total = sum(nativevap, na.rm = T),
asianvap_total = sum(asianvap, na.rm = T),
othervap_total = sum(othervap, na.rm = T),
nbminvap_total = sum(nbminvap, na.rm = T),
pct_annexed = mean(annexed, na.rm = T),
njobs_total = sum(njobs07, na.rm = T),
nhincjobs_total = sum(nhincjobs07, na.rm = T),
nwork_total = sum(jobs, na.rm = T),
incopp_total = sum(incopp, na.rm = T),
hu_total = sum(hu, na.rm = T),
owneroccupied_total = sum(owneroccupied, na.rm = T),
vacancy_total = sum(vacancy)
) %>%
ungroup() %>%
mutate(pctnhblack_total = (nhblack_total/pop_total)*100,
pcth_total = (h_total/pop_total)*100,
pctnhwhite_total = (nhwhite_total/pop_total)*100,
pctasian_total = (asian_total/pop_total)*100,
pctnative_total = (native_total/pop_total)*100,
pctother_total = (other_total/pop_total)*100,
pctnbmin_total = (nbmin_total/pop_total)*100,
pctownerocc_total = (owneroccupied_total/hu_total)*100,
pctincopp_total = ifelse(nwork_total == 0, 0, (incopp_total/nwork_total)*100),
pcthincjobs_total = ifelse(njobs_total == 0, 0, (nhincjobs_total/njobs_total)*100),
pctnhblackvap_total = (nhblackvap_total/vap_total)*100,
pcthvap_total = (hvap_total/vap_total)*100,
pctnhwhitevap_total = (nhwhitevap_total/vap_total)*100,
pctasianvap_total = (asianvap_total/vap_total)*100,
pctnativevap_total = (nativevap_total/vap_total)*100,
pctothervap_total = (othervap_total/vap_total)*100,
pctnbminvap_total = (nbminvap_total/vap_total)*100)
place_by_annex <- aa0708 %>%
mutate(incopp = man + ret) %>%
filter(annexed==1) %>%
group_by(plid, annexed) %>%
dplyr::summarize(pop_total = sum(pop, na.rm = T),
area_total = sum(area, na.rm = T),
nhblack_total = sum(nhblack, na.rm = T),
nhwhite_total = sum(nhwhite, na.rm = T),
h_total = sum(h, na.rm = T),
asian_total = sum(asian, na.rm = T),
native_total = sum(native, na.rm = T),
other_total = sum(other, na.rm = T),
nbmin_total = sum(nbmin, na.rm = T),
njobs_total = sum(njobs07, na.rm = T),
nhincjobs_total = sum(nhincjobs07, na.rm = T),
nwork_total = sum(jobs, na.rm = T),
incopp_total = sum(incopp, na.rm = T),
hu_total = sum(hu, na.rm = T),
owneroccupied_total = sum(owneroccupied, na.rm = T),
vacancy_total = sum(vacancy, na.rm = T),
vap_total = sum(vap, na.rm = T),
nhblackvap_total = sum(nhbvap, na.rm = T),
nhwhitevap_total = sum(nhwvap, na.rm = T),
hvap_total = sum(hispvap, na.rm = T),
nativevap_total = sum(nativevap, na.rm = T),
asianvap_total = sum(asianvap, na.rm = T),
othervap_total = sum(othervap, na.rm = T),
nbminvap_total = sum(nbminvap, na.rm = T)) %>%
ungroup() %>%
pivot_wider(
id_cols = plid,
names_from = annexed,
values_from = c(pop_total:nbminvap_total)
) %>%
mutate(pctnhblack_total_1 = (nhblack_total_1/pop_total_1)*100,
pctnhwhite_total_1 = (nhwhite_total_1/pop_total_1)*100,
pcth_total_1 = (h_total_1/pop_total_1)*100,
pctnhblackvap_total_1 = (nhblackvap_total_1/vap_total_1)*100,
pctnhwhitevap_total_1 = (nhwhitevap_total_1/vap_total_1)*100,
pcthvap_total_1 = (hvap_total_1/vap_total_1)*100,
pctasian_total_1 = (asian_total_1/pop_total_1)*100,
pctnative_total_1 = (native_total_1/pop_total_1)*100,
pctother_total_1 = (other_total_1/pop_total_1)*100,
pctnbmin_total_1 = (nbmin_total_1/pop_total_1)*100,
pctasianvap_total_1 = (asianvap_total_1/vap_total_1)*100,
pctnativevap_total_1 = (nativevap_total_1/vap_total_1)*100,
pctothervap_total_1 = (othervap_total_1/vap_total_1)*100,
pctnbminvap_total_1 = (nbminvap_total_1/vap_total_1)*100,
pctincopp_total_1 = ifelse(nwork_total_1 == 0, 0, (incopp_total_1/nwork_total_1)*100),
pcthincjobs_total_1 = ifelse(njobs_total_1 == 0, 0, (nhincjobs_total_1/njobs_total_1)*100),
pctownerocc_total_1 = (owneroccupied_total_1/hu_total_1)*100) %>%
filter(pop_total_1 > 1,
hu_total_1 > 1)
sapply(place_all, function(x) sum(is.na(x)))
pl_annex_var_0708 <- left_join(
place_all, place_by_annex,
by = "plid"
) %>%
mutate(annexing = ifelse(!is.na(pop_total_1), 1, 0))
table(pl_annex_var_0708$annexing)
sapply(place_all, function(x) sum(is.na(x)))
# add vra indicator
places_vra <- aa0708 %>%
group_by(plid) %>%
dplyr::summarize(vra = mean(vra, na.rm = T)) %>%
ungroup() %>%
mutate(vra = ifelse(vra > 0, 1, 0))
pl_annex_var_0708 %<>%
left_join(places_vra, by = "plid")
# place-level variables
pl07 <- read_csv("pl2007_cleaned.csv")
table(pl_annex_var_0708$plid %in% pl07$plid) #28 false
cdps08 <- read_csv("plids/pl2008.csv") %>% # want to know which places are CDPs--they do not annex
select(Geo_NAME, plid) %>%
mutate(cdp = ifelse(grepl("CDP|cdp", Geo_NAME), 1, 0)) %>%
filter(cdp==1)
pl_annex_var_0708 %<>%
filter(plid %in% pl07$plid & !(plid %in% cdps08$plid)) %>%
left_join(pl07, by = "plid") %>%
mutate(post = 0,
time = "2007 to 2008",
pctowneroccupied07p = (owneroccupied07p/hu07p)*100)
table(pl_annex_var_0708$annexing)
pl_annex_var_0708 %<>%
#filter(pop_total > 0) %>%
mutate(annexing = ifelse(annexing == 1 & (pop_total_1 < 1 | is.na(pop_total_1) | pop_total < 1), 0, annexing))
table(pl_annex_var_0708$annexing)
sapply(pl_annex_var_0708, function(x) sum(is.na(x)))
pl_annex_var_0708 %<>%
mutate(
underbound_black = ifelse(
(annexing == 1 & pctnhblack_total_1 < pctnhblack07p), 1, 0),
underbound_nbmin = ifelse(
(annexing == 1 & pctnbmin_total_1 < pctnbmin07p), 1, 0)
)
pl_annex_var_0708 %<>%
filter(pop07p > 0)
names(pl_annex_var_0708) <- gsub("07p", "_p0", names(pl_annex_var_0708))
table(pl_annex_var_0708$plid %in% plids)
pl_annex_var_0708 %<>%
filter(plid %in% plids)
panel_annual %<>%
mutate(more_white = ifelse(pctnhwhite_total > pctnhwhite_p0, 1, 0)) %>%
filter_at(vars(pop_p0, popdensity_p0, pctnhblack_total, pctnbmin_total, more_white, pctowneroccupied_p0, mhmval_p0, hinc_p0, pctpov_p0, pctblackpov_p0, pctnbminpov_p0, pctownerocc_total, pcthincjobs_total, pctincopp_total, ), ~!is.na(.))
pl_annex_var_0708 %<>%
mutate(more_white = ifelse(pctnhwhite_total > pctnhwhite_p0, 1, 0)) %>%
filter_at(vars(pop_p0, popdensity_p0, pctnhblack_total, pctnbmin_total, more_white, pctowneroccupied_p0, mhmval_p0, hinc_p0, pctpov_p0, pctblackpov_p0, pctnbminpov_p0, pctownerocc_total, pcthincjobs_total, pctincopp_total, ), ~!is.na(.))
pl_annex_var_0708 %<>%
mutate(more_white = ifelse(pctnhwhite_total > pctnhwhite_p0, 1, 0)) %>%
filter_at(vars(pop_p0, popdensity_p0, pctnhblack_total, pctnbmin_total, more_white, pctowneroccupied_p0, mhmval_p0, hinc_p0, ppov_p0, pctblackpov_p0, pctnbminpov_p0, pctownerocc_total, pcthincjobs_total, pctincopp_total, ), ~!is.na(.))
# -------------------------------------------------------------------------
# Created by: Iris Zhang
# Date created: 07/10/2023
# Last revised:
# Project: MBC
# Subproject: Analysis
# Re: Do annual annexations analysis for R&R
# -------------------------------------------------------------------------
# Script Description ------------------------------------------------------
# Inputs:
#
# Outputs:
#
# Updates log:
# Setup -------------------------------------------------------------------
rm(list = ls())
# Packages:
# Directories:
setwd("~/Google Drive/My Drive/Stanford/QE2")
curdir <- paste0(dirname(rstudioapi::getSourceEditorContext()$path))
savedir <- paste0(curdir, "/../results/")
# homedir <- The smallest directory that contains all input/output folders.
# workdir <- The smallest directory that contains all necessary inputs.
# savedir <- The smallest directory that contains all output folders.
# setwd(paste0(homedir, workdir))
# Import data:
# load(paste0(savedir, "annual_annexations.RData"))
# Parameters:
# Main Script -------------------------------------------------------------
# get environment ready
library("stringr")
library("tidyverse")
library("dplyr")
library("stargazer")
library("fixest")
library("readr")
library("data.table")
library("magrittr")
library("openxlsx")
library("broom")
library("sjPlot")
# plids in the DBR panel ----
panel0020_did <- read_csv("analyticalfiles/panel_prestandard.csv") %>%
filter(time %in% c("2007 to 2013", "2014 to 2020"))
plids <- unique(panel0020_did$plid)
rm(panel0020_did)
# 2007-2008 ----
aa0708 <- read_csv("analyticalfiles/annexedblocks0708dem.csv")
names(aa0708)
# transform this into place-level summaries
# characteristic of all annexable blocks
# diff between annexed and not annexed
place_all <- aa0708 %>%
mutate(incopp = man + ret) %>%
group_by(plid) %>%
dplyr::summarize(pop_total = sum(pop, na.rm = T),
area_total = sum(area, na.rm = T),
nhblack_total = sum(nhblack, na.rm = T),
nhwhite_total = sum(nhwhite, na.rm = T),
h_total = sum(h, na.rm = T),
asian_total = sum(asian, na.rm = T),
native_total = sum(native, na.rm = T),
other_total = sum(other, na.rm = T),
nbmin_total = sum(nbmin, na.rm = T),
vap_total = sum(vap, na.rm = T),
nhblackvap_total = sum(nhbvap),
nhwhitevap_total = sum(nhwvap),
hvap_total = sum(hispvap),
nativevap_total = sum(nativevap, na.rm = T),
asianvap_total = sum(asianvap, na.rm = T),
othervap_total = sum(othervap, na.rm = T),
nbminvap_total = sum(nbminvap, na.rm = T),
pct_annexed = mean(annexed, na.rm = T),
njobs_total = sum(njobs07, na.rm = T),
nhincjobs_total = sum(nhincjobs07, na.rm = T),
nwork_total = sum(jobs, na.rm = T),
incopp_total = sum(incopp, na.rm = T),
hu_total = sum(hu, na.rm = T),
owneroccupied_total = sum(owneroccupied, na.rm = T),
vacancy_total = sum(vacancy)
) %>%
ungroup() %>%
mutate(pctnhblack_total = (nhblack_total/pop_total)*100,
pcth_total = (h_total/pop_total)*100,
pctnhwhite_total = (nhwhite_total/pop_total)*100,
pctasian_total = (asian_total/pop_total)*100,
pctnative_total = (native_total/pop_total)*100,
pctother_total = (other_total/pop_total)*100,
pctnbmin_total = (nbmin_total/pop_total)*100,
pctownerocc_total = (owneroccupied_total/hu_total)*100,
pctincopp_total = ifelse(nwork_total == 0, 0, (incopp_total/nwork_total)*100),
pcthincjobs_total = ifelse(njobs_total == 0, 0, (nhincjobs_total/njobs_total)*100),
pctnhblackvap_total = (nhblackvap_total/vap_total)*100,
pcthvap_total = (hvap_total/vap_total)*100,
pctnhwhitevap_total = (nhwhitevap_total/vap_total)*100,
pctasianvap_total = (asianvap_total/vap_total)*100,
pctnativevap_total = (nativevap_total/vap_total)*100,
pctothervap_total = (othervap_total/vap_total)*100,
pctnbminvap_total = (nbminvap_total/vap_total)*100)
place_by_annex <- aa0708 %>%
mutate(incopp = man + ret) %>%
filter(annexed==1) %>%
group_by(plid, annexed) %>%
dplyr::summarize(pop_total = sum(pop, na.rm = T),
area_total = sum(area, na.rm = T),
nhblack_total = sum(nhblack, na.rm = T),
nhwhite_total = sum(nhwhite, na.rm = T),
h_total = sum(h, na.rm = T),
asian_total = sum(asian, na.rm = T),
native_total = sum(native, na.rm = T),
other_total = sum(other, na.rm = T),
nbmin_total = sum(nbmin, na.rm = T),
njobs_total = sum(njobs07, na.rm = T),
nhincjobs_total = sum(nhincjobs07, na.rm = T),
nwork_total = sum(jobs, na.rm = T),
incopp_total = sum(incopp, na.rm = T),
hu_total = sum(hu, na.rm = T),
owneroccupied_total = sum(owneroccupied, na.rm = T),
vacancy_total = sum(vacancy, na.rm = T),
vap_total = sum(vap, na.rm = T),
nhblackvap_total = sum(nhbvap, na.rm = T),
nhwhitevap_total = sum(nhwvap, na.rm = T),
hvap_total = sum(hispvap, na.rm = T),
nativevap_total = sum(nativevap, na.rm = T),
asianvap_total = sum(asianvap, na.rm = T),
othervap_total = sum(othervap, na.rm = T),
nbminvap_total = sum(nbminvap, na.rm = T)) %>%
ungroup() %>%
pivot_wider(
id_cols = plid,
names_from = annexed,
values_from = c(pop_total:nbminvap_total)
) %>%
mutate(pctnhblack_total_1 = (nhblack_total_1/pop_total_1)*100,
pctnhwhite_total_1 = (nhwhite_total_1/pop_total_1)*100,
pcth_total_1 = (h_total_1/pop_total_1)*100,
pctnhblackvap_total_1 = (nhblackvap_total_1/vap_total_1)*100,
pctnhwhitevap_total_1 = (nhwhitevap_total_1/vap_total_1)*100,
pcthvap_total_1 = (hvap_total_1/vap_total_1)*100,
pctasian_total_1 = (asian_total_1/pop_total_1)*100,
pctnative_total_1 = (native_total_1/pop_total_1)*100,
pctother_total_1 = (other_total_1/pop_total_1)*100,
pctnbmin_total_1 = (nbmin_total_1/pop_total_1)*100,
pctasianvap_total_1 = (asianvap_total_1/vap_total_1)*100,
pctnativevap_total_1 = (nativevap_total_1/vap_total_1)*100,
pctothervap_total_1 = (othervap_total_1/vap_total_1)*100,
pctnbminvap_total_1 = (nbminvap_total_1/vap_total_1)*100,
pctincopp_total_1 = ifelse(nwork_total_1 == 0, 0, (incopp_total_1/nwork_total_1)*100),
pcthincjobs_total_1 = ifelse(njobs_total_1 == 0, 0, (nhincjobs_total_1/njobs_total_1)*100),
pctownerocc_total_1 = (owneroccupied_total_1/hu_total_1)*100) %>%
filter(pop_total_1 > 1,
hu_total_1 > 1)
sapply(place_all, function(x) sum(is.na(x)))
pl_annex_var_0708 <- left_join(
place_all, place_by_annex,
by = "plid"
) %>%
mutate(annexing = ifelse(!is.na(pop_total_1), 1, 0))
table(pl_annex_var_0708$annexing)
sapply(place_all, function(x) sum(is.na(x)))
# add vra indicator
places_vra <- aa0708 %>%
group_by(plid) %>%
dplyr::summarize(vra = mean(vra, na.rm = T)) %>%
ungroup() %>%
mutate(vra = ifelse(vra > 0, 1, 0))
pl_annex_var_0708 %<>%
left_join(places_vra, by = "plid")
# place-level variables
pl07 <- read_csv("pl2007_cleaned.csv")
table(pl_annex_var_0708$plid %in% pl07$plid) #28 false
cdps08 <- read_csv("plids/pl2008.csv") %>% # want to know which places are CDPs--they do not annex
select(Geo_NAME, plid) %>%
mutate(cdp = ifelse(grepl("CDP|cdp", Geo_NAME), 1, 0)) %>%
filter(cdp==1)
pl_annex_var_0708 %<>%
filter(plid %in% pl07$plid & !(plid %in% cdps08$plid)) %>%
left_join(pl07, by = "plid") %>%
mutate(post = 0,
time = "2007 to 2008",
pctowneroccupied07p = (owneroccupied07p/hu07p)*100)
table(pl_annex_var_0708$annexing)
pl_annex_var_0708 %<>%
#filter(pop_total > 0) %>%
mutate(annexing = ifelse(annexing == 1 & (pop_total_1 < 1 | is.na(pop_total_1) | pop_total < 1), 0, annexing))
table(pl_annex_var_0708$annexing)
sapply(pl_annex_var_0708, function(x) sum(is.na(x)))
pl_annex_var_0708 %<>%
mutate(
underbound_black = ifelse(
(annexing == 1 & pctnhblack_total_1 < pctnhblack07p), 1, 0),
underbound_nbmin = ifelse(
(annexing == 1 & pctnbmin_total_1 < pctnbmin07p), 1, 0)
)
pl_annex_var_0708 %<>%
filter(pop07p > 0)
names(pl_annex_var_0708) <- gsub("07p", "_p0", names(pl_annex_var_0708))
table(pl_annex_var_0708$plid %in% plids)
pl_annex_var_0708 %<>%
filter(plid %in% plids)
pl_annex_var_0708 %<>%
mutate(more_white = ifelse(pctnhwhite_total > pctnhwhite_p0, 1, 0)) %>%
filter_at(vars(pop_p0, popdensity_p0, pctnhblack_total, pctnbmin_total, more_white, pctowneroccupied_p0, mhmval_p0, hinc_p0, ppov_p0, pctblackpov_p0, pctnbminpov_p0, pctownerocc_total, pcthincjobs_total, pctincopp_total), ~!is.na(.))
rm(list = ls())
# Directories:
setwd("~/Google Drive/My Drive/Stanford/QE2")
homedir <- paste0(dirname(rstudioapi::getSourceEditorContext()$path), "/")
savedir <- paste0(homedir, "/../results/")
load("annual_annexations.RData")
names(panel_annual) <- gsub("ppov", "pctpov", names(panel_annual))
panel_annual %<>%
mutate(STATE = substr(plid, 1, 2),
more_white = ifelse(pctnhwhite_total > pctnhwhite_p0, 1, 0))
sapply(panel_annual, function(x) sum(is.na(x)))
panel_annual %<>%
filter_at(vars(pop_p0, popdensity_p0, pctnhblack_total, pctnbmin_total, more_white, pctowneroccupied_p0, mhmval_p0, hinc_p0, pctpov_p0, pctblackpov_p0, pctnbminpov_p0, pctownerocc_total, pcthincjobs_total, pctincopp_total, ), ~!is.na(.))
panel_annual %<>%
mutate_at(vars(c(ends_with("total"), ends_with("_p0"))),
~((.-mean(., na.rm = T))/sd(., na.rm = T)))
# binary comparison of racial composition ----
nhb <- feols(underbound_black ~ as.factor(time)*as.factor(vra) | plid + time, data = panel_annual, cluster = ~plid + STATE)
summary(nhb)
nhb_cov <- feols(underbound_black ~ as.factor(time)*as.factor(vra) + pctnhblack_p0 + pctnhblack_total | plid + time, data = panel_annual, cluster = ~plid + STATE)
summary(nhb_cov)
nbmin <- feols(underbound_nbmin ~ as.factor(time)*as.factor(vra) | plid + time, data = panel_annual, cluster = ~plid + STATE)
summary(nbmin)
nbmin_cov <- feols(underbound_nbmin ~ as.factor(time)*as.factor(vra) + pctnbmin_p0 + pctnbmin_total | plid + time, data = panel_annual, cluster = ~plid + STATE)
summary(nbmin_cov)
nhb_tid <- tidy(nhb)
for (model_stat in names(glance(nhb))) {
nhb_tid[[model_stat]] <- glance(nhb)[[model_stat]]
}
nhb_cov_tid <- tidy(nhb_cov)
for (model_stat in names(glance(nhb_cov))) {
nhb_cov_tid[[model_stat]] <- glance(nhb_cov)[[model_stat]]
}
nbmin_tid <- tidy(nbmin)
for (model_stat in names(glance(nbmin))) {
nbmin_tid[[model_stat]] <- glance(nbmin)[[model_stat]]
}
nbmin_cov_tid <- tidy(nbmin_cov)
for (model_stat in names(glance(nbmin_cov))) {
nbmin_cov_tid[[model_stat]] <- glance(nbmin_cov)[[model_stat]]
}
annex_list <- list(nhb_tid, nhb_cov_tid,
nbmin_tid, nbmin_cov_tid)
openxlsx::write.xlsx(annex_list, paste0(savedir, "outcome_reg_annual.xlsx"))
# coef plot for underbound ----
base <- read_xlsx(path = paste0(savedir, "outcome_reg_annual.xlsx"), sheet = 1) %>%
select(est = estimate, se = std.error, term = term) %>%
mutate(
ci = 1.96*se,
model = "Baseline"
)
cov <- read_xlsx(path = paste0(savedir, "outcome_reg_annual.xlsx"), sheet = 2) %>%
select(est = estimate, se = std.error, term = term) %>%
mutate(
ci = 1.96*se,
model = "With Covariates"
)
nhb <- base::rbind(base, cov)
plot = ggplot(nhb,
aes(x = term, y = est, shape = model, group = model)) +
geom_point(position=position_dodge(width=0.5), size = 2) +
geom_errorbar(aes(x = term, ymin = est - ci, ymax = est + ci),
width = 0.2, position=position_dodge(width=0.5)) +
geom_hline(yintercept = 0, linetype = "dashed", size = 0.2) +
ylab("Coefficient, 95% CIs") +
xlab(NULL) +
theme_bw() +
theme(
axis.ticks.x = element_blank(),
legend.title = element_blank(),
legend.position = "bottom")
plot
base <- read_xlsx(path = paste0(savedir, "outcome_reg_annual.xlsx"), sheet = 3) %>%
select(est = estimate, se = std.error, term = term) %>%
mutate(
ci = 1.96*se,
model = "Baseline"
)
cov <- read_xlsx(path = paste0(savedir, "outcome_reg_annual.xlsx"), sheet = 4) %>%
select(est = estimate, se = std.error, term = term) %>%
mutate(
ci = 1.96*se,
model = "With Covariates"
)
nbm <- base::rbind(base, cov)
plot = ggplot(nbm,
aes(x = term, y = est, shape = model, group = model)) +
geom_point(position=position_dodge(width=0.5), size = 2) +
geom_errorbar(aes(x = term, ymin = est - ci, ymax = est + ci),
width = 0.2, position=position_dodge(width=0.5)) +
geom_hline(yintercept = 0, linetype = "dashed", size = 0.2) +
ylab("Coefficient, 95% CIs") +
xlab(NULL) +
theme_bw() +
theme(
axis.ticks.x = element_blank(),
legend.title = element_blank(),
legend.position = "bottom")
plot
