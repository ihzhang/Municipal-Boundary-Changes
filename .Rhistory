leg <- as_ggplot(get_legend(nhb_14))
nhb_14 <- nhb_14 +
theme(legend.position = "none")
pl20 <- st_read("SHP_pl/2020/tl_2020_13_place.shp") %>%
filter(GEOID %in% plids_viz) %>%
st_transform(., 3488)
nhb_20 <- ggplot() +
geom_sf(data = pl20, size = 0.1, color = "black", fill = alpha("ghostwhite", 0.7)) +
labs(caption = "2020") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) +
map_theme
nhb_20
nhb_attempt <- ggarrange(
plotlist = list(nhb_00, nhb_07, leg, nhb_14, nhb_20), ncol = 3, nrow = 2, widths = c(1, 1, 1, 1, 1),
heights = c(0.5, 0.5, 0.5, 0.5, 0.5))
nhb_attempt
ggsave("analyticalfiles/final/Atlanta_annex_0020.pdf",
plot = nhb_attempt)
nhb_attempt <- ggarrange(
plotlist = list(nhb_00, nhb_07, leg, nhb_14, nhb_20), ncol = 3, nrow = 2, widths = c(1, 1, 1, 1, 1),
heights = c(1, 1, 1, 1, 1))
ggsave("analyticalfiles/final/Atlanta_annex_0020.pdf",
plot = nhb_attempt)
# 1379948 ----
# Common map_theme
map_theme <- theme(
plot.title = element_text(
hjust = .5,
vjust = 0.2,
size = 8
),
plot.margin = grid::unit(c(0, 0, 0, 0), "mm"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
# 0007 (2000 blocks are on 2000 data)
pl0007 <- read_csv("analyticalfiles/annexedblocks0007dem.csv") %>%
filter(plid=="1379948")
plids_viz <- unique(pl0007$plid)
# t1 place
pl00 <- st_read("SHP_pl/2000/GA_13/tl_2010_13_place00.shp") %>%
filter(PLCIDFP00 %in% pl0007$plid) %>%
st_transform(., 3488)
buff00 <- read_csv("2000buffers.csv") %>%
filter(!duplicated(blkid))
buff00 %<>%
filter(bufferplace %in% pl0007$plid & !is.na(blkid))
blk00 <- st_read("SHP_blk_0010/2000/GA_13/tl_2010_13_tabblock00.shp") %>%
#left_join(cw, by = c("BLKIDFP00" = "GEOID00")) %>%
#mutate(blkid = GEOID10) %>%
#filter(!is.na(blkid)) %>%
rename(blkid = BLKIDFP00) %>%
filter(blkid %in% buff00$blkid) %>%
st_transform(., 3488) %>%
left_join(pl0007, by = c("blkid")) %>%
mutate_at(vars(nhblack00b:nbmin00b), ~ifelse(pop00b == 0, 0, ((./pop00b)*100)))
# get which blocks were annexed
annexed <- blk00 %>% filter(annexed == 1)
# Create common legend breaks for
breaks <- c(0, 20, 40, 60, 80, 100)
limits = c(0, 100)
nhb_00 <- ggplot() +
geom_sf(data = pl00, size = 0.1, color = "black", fill = alpha("ghostwhite", 0.7)) +
geom_sf(data = blk00, size = 0.1, aes(fill = nhblack00b)) +
scale_fill_gradient(low="grey87", high="grey51", breaks = breaks, limits = limits) +
#geom_sf(data = annexed, size = 0.5, aes(fill = nhblack00b, color = "Annexed Block"), show.legend = "line") +
scale_color_manual(values = "black", guide = guide_legend(override.aes = list(fill = "black", color = "black"))) +
labs(fill = "% Non-Hispanic Black",
caption = "2000-2007 \n (no annexations)") +
theme(legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) +
map_theme
nhb_00
# 2007-2013
pl0713 <- read_csv("analyticalfiles/annexedblocks0713dem.csv") %>%
filter(plid==plids_viz)
# 2007 places (2007 blocks on 2010 boundaries for data)
pl07 <- st_read("SHP_pl/2007/fe_2007_13_place.shp") %>%
filter(PLCIDFP %in% pl0713$plid) %>%
st_transform(., 3488)
buff07 <- read_csv("2007buffers.csv") %>%
filter(!duplicated(blkid))
cw <- read_csv("cw/2000-to-2010_unique.csv")
buff07 %<>%
filter(bufferplace %in% pl0713$plid)
blk07 <- st_read("SHP_blk_0010/2000/GA_13/tl_2010_13_tabblock00.shp") %>%
filter(BLKIDFP00 %in% buff07$blkid) %>%
st_transform(., 3488) %>%
left_join(cw, by = c("BLKIDFP00" = "GEOID00")) %>%
#filter(!is.na(GEOID10)) %>%
left_join(pl0713, by = c("GEOID10" = "blkid")) %>%
mutate_at(vars(nhblack:nbmin), ~ifelse(pop == 0 | is.na(pop), 0, ((./pop)*100)))
annexed <- blk07 %>%
filter(annexed == 1)
nhb_07 <- ggplot() +
geom_sf(data = pl07, size = 0.1, color = "black", fill = alpha("ghostwhite", 0.7)) +
geom_sf(data = blk07, size = 0.1, aes(fill = nhblack)) +
scale_fill_gradient(low="grey87", high="grey51", breaks = breaks, limits = limits) +
#geom_sf(data = annexed, size = 0.75, aes(fill = nhblack, color = "Annexed Block"), show.legend = "line") +
scale_color_manual(values = "black", guide = guide_legend(override.aes = list(fill = "black", color = "black"))) +
labs(fill = "% Non-Hispanic Black",
caption = "2007-2013 \n (no annexations)") +
theme(legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) +
map_theme
nhb_07
# 2014-2020
pl1420 <- read_csv("analyticalfiles/annexedblocks1420dem.csv") %>%
filter(plid==plids_viz)
# 2014 places
pl14 <- st_read("SHP_pl/2014/GA_13/tl_2014_13_place.shp") %>%
filter(GEOID %in% plids_viz) %>%
st_transform(., 3488)
blk14 <- st_read("SHP_blk_0010/2014/GA_13/tl_2014_13_tabblock10.shp") %>%
filter(GEOID10 %in% pl1420$blkid) %>%
filter(!duplicated(GEOID10)) %>%
st_transform(., 3488) %>%
left_join(pl1420, by = c("GEOID10" = "blkid")) %>%
mutate_at(vars(nhblack:nbmin), ~ifelse(pop == 0, 0, ((./pop)*100)))
# which were annexed in 2020
annexed <- blk14 %>%
filter(annexed == 1)
nhb_14 <- ggplot() +
geom_sf(data = blk14, size = 0.1, aes(fill = nhblack)) +
geom_sf(data = pl14, size = 0.1, color = "black", fill = alpha("ghostwhite", 0.7)) +
scale_fill_gradient(low="grey87", high="grey51", breaks =  breaks, limits = limits) +
#geom_sf(data = annexed, size = 0.75, aes(fill = nhblack, color = "Annexed Block"), show.legend = "line") +
scale_color_manual(values = "black", guide = guide_legend(override.aes = list(fill = "black", color = "black"))) +
labs(color='Annexed',
fill = "% Non-Hispanic Black",
caption = "2014-2020 \n (no annexations)") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) +
map_theme
nhb_14
leg <- as_ggplot(get_legend(nhb_14))
nhb_14 <- nhb_14 +
theme(legend.position = "none")
pl20 <- st_read("SHP_pl/2020/tl_2020_13_place.shp") %>%
filter(GEOID %in% plids_viz) %>%
st_transform(., 3488)
nhb_20 <- ggplot() +
geom_sf(data = pl20, size = 0.1, color = "black", fill = alpha("ghostwhite", 0.7)) +
labs(caption = "2020") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) +
map_theme
nhb_20
nhb_attempt <- ggarrange(
plotlist = list(nhb_00, nhb_07, leg, nhb_14, nhb_20), ncol = 3, nrow = 2, widths = c(1, 1, 1, 1, 1),
heights = c(1, 1, 1, 1, 1))
nhb_attempt
ggsave("analyticalfiles/final/Waleska_annex_0020.pdf",
plot = nhb_attempt)
table(panel0020_did$annexing[panel0020_did$time == "2007 to 2013"])
table(panel0020_did$annexing[panel0020_did$time == "2014 to 2020"])
table(panel0020_did$vraa)
338/nrow(panel0020_did)
table(panel0020_did$vraa[panel0020_did$time %in% c("2007 to 2013", "2014 to 2020")])
278/278_31596
278/278+31596
278/(278+31596)
table(panel0020_did$underbound_black_vraa)
table(panel0020_did$underbound_hisp_vraa)
table(panel0020_did$underbound_asian_vraa)
table(panel0020_did$underbound_nbmin_vraa)
table(panel0020_did$underbound_blackvap_vraa)
table(panel0020_did$underbound_hispvap_vraa)
table(panel0020_did$underbound_othervap_vraa)
table(panel0020_did$underbound_natvievap_vraa)
table(panel0020_did$underbound_nativevap_vraa)
table(panel0020_did$underbound_asianvap_vraa)
table(panel0020_did$underbound_blackvap_vraa[panel0020_did$time %in% c("2007 to 2013", "2014 to 2020")])
table(panel0020_did$annexing[panel0020_did$time %in% c("2007 to 2013", "2014 to 2020")])
# Setup: -----------------------------------------------------------------------
library("tidyverse") # recall that we use this package to get the dplyr language
library("readr") # for write_csv and read_csv functions
library("data.table") # package for handling large datasets
library("magrittr") # for %<>% operator
homedir <- paste0(dirname(rstudioapi::getSourceEditorContext()$path))
workdir <- paste0("/../misc_data/")
setwd(paste0(homedir, workdir))
library(foreign) # to read dta files
# read in files from UDP ----
pl_dat <- read.dta("Census_2000_place_CA_mani_control_group_BAY_CSA.dta")
# read in files from UDP ----
pl_dat <- read.dta("SVCF_UDP_data/Census_2000_place_CA_mani_control_group_BAY_CSA.dta")
library(stata13) # to read dta 13 files
install.packages("stata13")
library(readstata13) # to read dta 13 files
install.packages("readstata13")
library(readstata13) # to read dta 13 files
# read in files from UDP ----
pl_dat <- read.dta13("SVCF_UDP_data/Census_2000_place_CA_mani_control_group_BAY_CSA.dta")
View(pl_dat)
names(pl_dat)
names(pl_dat)
pl_dat[, c(6:8)]
2483/2916
# get variables needed:
# pop, pnhwht, pcol, hinc, prent, pmulti, mhmval, mrent
names(pl_dat)
pl_dat[, c(53:55)]
269/2516
769/2516
pl_dat[, c(16:22)]
names(pl_dat)
pl_dat[, c(23:38)]
names(pl_dat)
pl_dat[, c(61:68)]
names(pl_dat)
pl_dat %>% filter(epa_match == 1 | epa == 1) %>% select(61:68)
pl_dat %>% filter(epa_match == 1 | epa == 1) %>% select(61:68) %>% View()
pl_dat %>% filter(epa_match == 1 | epa == 1) %>% select(61:76) %>% View()
pl_dat %>% filter(epa_match == 1 | epa == 1) %>% select(61:77) %>% View()
pl_dat %>% filter(epa == 1) %>% select(61:68)
pl_dat %>% filter(epa_match == 1) %>% select(61:77) %>% View()
pl_dat %>% filter(place == "San Pablo City") %>% select(61:77) %>% View()
pl_dat %>% filter(place == "San Pablo city") %>% select(61:77) %>% View()
pl_dat %>% filter(name == "San Pablo city") %>% select(61:77) %>% View()
varindex <- c("pop_tot", "pct_whi", "pct_college", "med_inc", "pct_h_rent", "pct_h_multi_3more", "med_val", "med_rent")
varindex_grp <- str_c(varindex, "_grp")
names(pl_dat)
table(pl_dat$year)
rc <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
jc <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
# do it iteratively for each city in jc ----
# covered cities are: Alameda, Berkeley, EPA, Emeryville, Hayward, Los Gatos, MV, Oakland, Richmond, SF, SJ, Union City
jc$name
treated <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
control <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
rm(jc, rc)
covered <- c("Alameda city", "Berkeley city", "East Palo Alto city", "Emeryville city", "Hayward city", "Los Gatos town", "Mountain View city", "Oakland city", "Richmond city", "San Francisco city", "San Jose city", "Union city")
treated <- pl_dat %<>%
filter(name %in% covered)
# read in files from UDP ----
pl_dat <- read.dta13("SVCF_UDP_data/Census_2000_place_CA_mani_control_group_BAY_CSA.dta")
# get variables needed:
# pop, pnhwht, pcol, hinc, prent, pmulti, mhmval, mrent
names(pl_dat)
varindex <- c("pop_tot", "pct_whi", "pct_college", "med_inc", "pct_h_rent", "pct_h_multi_3more", "med_val", "med_rent")
varindex_grp <- str_c(varindex, "_grp")
covered
covered <- c("Alameda city", "Berkeley city", "East Palo Alto city", "Emeryville city", "Hayward city", "Los Gatos town", "Mountain View city", "Oakland city", "Richmond city", "San Francisco city", "San Jose city", "Union City city")
treated <- pl_dat %>%
filter(name %in% covered)
control <- pl_dat %>%
filter(!name %in% covered)
cities <- split(treated, f = name)
cities <- split(treated, f = treated$name)
treated <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
control <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
# do it iteratively for each city in jc ----
# covered cities are: Alameda, Berkeley, EPA, Emeryville, Hayward, Los Gatos, MV, Oakland, Richmond, SF, SJ, Union City
treated$name
covered <- c("Alameda city", "Berkeley city", "East Palo Alto city", "Emeryville city", "Hayward city", "Los Gatos town", "Mountain View city", "Oakland city", "Richmond city", "San Francisco city", "San Jose city", "Union City city")
treated <- pl_dat %>%
filter(name %in% covered)
control <- pl_dat %>%
filter(!name %in% covered)
cities <- split(treated, f = treated$name)
treated <- pl_dat %>%
select(all_of(name, st, place, varindex, varindex_grp))
treated <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
control <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
# do it iteratively for each city in jc ----
# covered cities are: Alameda, Berkeley, EPA, Emeryville, Hayward, Los Gatos, MV, Oakland, Richmond, SF, SJ, Union City
treated$name
covered <- c("Alameda city", "Berkeley city", "East Palo Alto city", "Emeryville city", "Hayward city", "Los Gatos town", "Mountain View city", "Oakland city", "Richmond city", "San Francisco city", "San Jose city", "Union City city")
treated <- pl_dat %>%
filter(name %in% covered)
treated <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
control <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
# do it iteratively for each city in jc ----
# covered cities are: Alameda, Berkeley, EPA, Emeryville, Hayward, Los Gatos, MV, Oakland, Richmond, SF, SJ, Union City
treated$name
covered <- c("Alameda city", "Berkeley city", "East Palo Alto city", "Emeryville city", "Hayward city", "Los Gatos town", "Mountain View city", "Oakland city", "Richmond city", "San Francisco city", "San Jose city", "Union City city")
treated %<>%
filter(name %in% covered)
control %<>%
filter(!name %in% covered)
cities <- split(treated, f = treated$name)
treated$varindex[[1]]
treated[[paste0(varindex[[1]])]]
find_city <- function(treated, control) {
control %<>%
mutate(match_1 = ifelse(between(varindex_grp[[1]], treated[paste0(varindex_grp[[1]])]-1, treated[paste0(varindex_grp[[1]])]+1), 1, 0),
match_2 = ifelse(between(varindex_grp[[2]], treated[paste0(varindex_grp[[2]])]-1, treated[paste0(varindex_grp[[2]])]+1), 1, 0),
match_3 = ifelse(between(varindex_grp[[3]], treated[paste0(varindex_grp[[3]])]-1, treated[paste0(varindex_grp[[3]])]+1), 1, 0),
match_4 = ifelse(between(varindex_grp[[4]], treated[paste0(varindex_grp[[4]])]-1, treated[paste0(varindex_grp[[4]])]+1), 1, 0),
match_5 = ifelse(between(varindex_grp[[5]], treated[paste0(varindex_grp[[5]])]-1, treated[paste0(varindex_grp[[5]])]+1), 1, 0),
match_6 = ifelse(between(varindex_grp[[6]], treated[paste0(varindex_grp[[6]])]-1, treated[paste0(varindex_grp[[6]])]+1), 1, 0),
match_7 = ifelse(between(varindex_grp[[7]], treated[paste0(varindex_grp[[7]])]-1, treated[paste0(varindex_grp[[7]])]+1), 1, 0),
match_8 = ifelse(between(varindex_grp[[8]], treated[paste0(varindex_grp[[8]])]-1, treated[paste0(varindex_grp[[8]])]+1), 1, 0),
match_number = rowSums(.['match_1':'match_8']))
}
control_list <- list()
names(cities)
names(cities[[1]])
names(cities)[[1]]
control_list <- list()
for (i in cities) {
city <- cities[[i]]
control_city <- find_city(city, control)
control_city %<>%
filter(match_number >= 5)
control_list[[i]] <- control_city
names(control_list)[[i]] <- names(cities)[[i]]
}
for (i in 1:length(cities)) {
city <- cities[[i]]
control_city <- find_city(city, control)
control_city %<>%
filter(match_number >= 5)
control_list[[i]] <- control_city
names(control_list)[[i]] <- names(cities)[[i]]
}
find_city <- function(treated, control) {
control %<>%
mutate(match_1 = ifelse(between(varindex_grp[[1]], treated[paste0(varindex_grp[[1]])]-1, treated[paste0(varindex_grp[[1]])]+1), 1, 0),
match_2 = ifelse(between(varindex_grp[[2]], treated[paste0(varindex_grp[[2]])]-1, treated[paste0(varindex_grp[[2]])]+1), 1, 0),
match_3 = ifelse(between(varindex_grp[[3]], treated[paste0(varindex_grp[[3]])]-1, treated[paste0(varindex_grp[[3]])]+1), 1, 0),
match_4 = ifelse(between(varindex_grp[[4]], treated[paste0(varindex_grp[[4]])]-1, treated[paste0(varindex_grp[[4]])]+1), 1, 0),
match_5 = ifelse(between(varindex_grp[[5]], treated[paste0(varindex_grp[[5]])]-1, treated[paste0(varindex_grp[[5]])]+1), 1, 0),
match_6 = ifelse(between(varindex_grp[[6]], treated[paste0(varindex_grp[[6]])]-1, treated[paste0(varindex_grp[[6]])]+1), 1, 0),
match_7 = ifelse(between(varindex_grp[[7]], treated[paste0(varindex_grp[[7]])]-1, treated[paste0(varindex_grp[[7]])]+1), 1, 0),
match_8 = ifelse(between(varindex_grp[[8]], treated[paste0(varindex_grp[[8]])]-1, treated[paste0(varindex_grp[[8]])]+1), 1, 0),
match_number = rowSums(across('match_1':'match_8'), na.rm = T))
}
control_list <- list()
for (i in 1:length(cities)) {
city <- cities[[i]]
control_city <- find_city(city, control)
control_city %<>%
filter(match_number >= 5)
control_list[[i]] <- control_city
names(control_list)[[i]] <- names(cities)[[i]]
}
View(control_list)
treated <- cities[[1]]
control %<>%
mutate(match_1 = ifelse(between(varindex_grp[[1]], treated[paste0(varindex_grp[[1]])]-1, treated[paste0(varindex_grp[[1]])]+1), 1, 0),
match_2 = ifelse(between(varindex_grp[[2]], treated[paste0(varindex_grp[[2]])]-1, treated[paste0(varindex_grp[[2]])]+1), 1, 0),
match_3 = ifelse(between(varindex_grp[[3]], treated[paste0(varindex_grp[[3]])]-1, treated[paste0(varindex_grp[[3]])]+1), 1, 0),
match_4 = ifelse(between(varindex_grp[[4]], treated[paste0(varindex_grp[[4]])]-1, treated[paste0(varindex_grp[[4]])]+1), 1, 0),
match_5 = ifelse(between(varindex_grp[[5]], treated[paste0(varindex_grp[[5]])]-1, treated[paste0(varindex_grp[[5]])]+1), 1, 0),
match_6 = ifelse(between(varindex_grp[[6]], treated[paste0(varindex_grp[[6]])]-1, treated[paste0(varindex_grp[[6]])]+1), 1, 0),
match_7 = ifelse(between(varindex_grp[[7]], treated[paste0(varindex_grp[[7]])]-1, treated[paste0(varindex_grp[[7]])]+1), 1, 0),
match_8 = ifelse(between(varindex_grp[[8]], treated[paste0(varindex_grp[[8]])]-1, treated[paste0(varindex_grp[[8]])]+1), 1, 0),
match_number = rowSums(across('match_1':'match_8'), na.rm = T))
control
names(control)
control %>% select(13:28)
View(treated)
treated <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
control <- pl_dat %>%
select(name, st, place, varindex, varindex_grp)
treated %<>%
filter(name %in% covered)
control %<>%
filter(!name %in% covered)
find_city <- function(treated, control) {
control %<>%
mutate(match_1 = ifelse(between(varindex_grp[[1]], treated[paste0(varindex_grp[[1]])]-1, treated[paste0(varindex_grp[[1]])]+1), 1, 0),
match_2 = ifelse(between(varindex_grp[[2]], treated[paste0(varindex_grp[[2]])]-1, treated[paste0(varindex_grp[[2]])]+1), 1, 0),
match_3 = ifelse(between(varindex_grp[[3]], treated[paste0(varindex_grp[[3]])]-1, treated[paste0(varindex_grp[[3]])]+1), 1, 0),
match_4 = ifelse(between(varindex_grp[[4]], treated[paste0(varindex_grp[[4]])]-1, treated[paste0(varindex_grp[[4]])]+1), 1, 0),
match_5 = ifelse(between(varindex_grp[[5]], treated[paste0(varindex_grp[[5]])]-1, treated[paste0(varindex_grp[[5]])]+1), 1, 0),
match_6 = ifelse(between(varindex_grp[[6]], treated[paste0(varindex_grp[[6]])]-1, treated[paste0(varindex_grp[[6]])]+1), 1, 0),
match_7 = ifelse(between(varindex_grp[[7]], treated[paste0(varindex_grp[[7]])]-1, treated[paste0(varindex_grp[[7]])]+1), 1, 0),
match_8 = ifelse(between(varindex_grp[[8]], treated[paste0(varindex_grp[[8]])]-1, treated[paste0(varindex_grp[[8]])]+1), 1, 0),
match_number = rowSums(across('match_1':'match_8'), na.rm = T))
}
cities <- split(treated, f = treated$name)
control_list <- list()
for (i in 1:length(cities)) {
city <- cities[[i]]
control_for_city <- control
control_city <- find_city(city, control_for_city)
control_city %<>%
filter(match_number >= 5)
control_list[[i]] <- control_city
names(control_list)[[i]] <- names(cities)[[i]]
}
View(control_list)
i <- 1
city <- cities[[i]]
control_for_city <- control
control_city <- find_city(city, control_for_city)
View(control_city)
find_city <- function(treated, control) {
control %<>%
mutate(match_1 = ifelse(between(.[[paste0(varindex_grp[[1]])]], treated[paste0(varindex_grp[[1]])]-1, treated[paste0(varindex_grp[[1]])]+1), 1, 0),
match_2 = ifelse(between(.[[paste0(varindex_grp[[2]])]], treated[paste0(varindex_grp[[2]])]-1, treated[paste0(varindex_grp[[2]])]+1), 1, 0),
match_3 = ifelse(between(.[[paste0(varindex_grp[[3]])]], treated[paste0(varindex_grp[[3]])]-1, treated[paste0(varindex_grp[[3]])]+1), 1, 0),
match_4 = ifelse(between(.[[paste0(varindex_grp[[4]])]], treated[paste0(varindex_grp[[4]])]-1, treated[paste0(varindex_grp[[4]])]+1), 1, 0),
match_5 = ifelse(between(.[[paste0(varindex_grp[[5]])]], treated[paste0(varindex_grp[[5]])]-1, treated[paste0(varindex_grp[[5]])]+1), 1, 0),
match_6 = ifelse(between(.[[paste0(varindex_grp[[6]])]], treated[paste0(varindex_grp[[6]])]-1, treated[paste0(varindex_grp[[6]])]+1), 1, 0),
match_7 = ifelse(between(.[[paste0(varindex_grp[[7]])]], treated[paste0(varindex_grp[[7]])]-1, treated[paste0(varindex_grp[[7]])]+1), 1, 0),
match_8 = ifelse(between(.[[paste0(varindex_grp[[8]])]], treated[paste0(varindex_grp[[8]])]-1, treated[paste0(varindex_grp[[8]])]+1), 1, 0),
match_number = rowSums(across('match_1':'match_8'), na.rm = T))
}
city <- cities[[i]]
control_for_city <- control
control_city <- find_city(city, control_for_city)
control_city
control_city %>% View()
control %<>%
mutate(match_1 = ifelse(.[[paste0(varindex_grp[[1]])]] %in% c(treated[paste0(varindex_grp[[1]])]-1:treated[paste0(varindex_grp[[1]])]+1), 1, 0))},
match_2 = ifelse(between(.[[paste0(varindex_grp[[2]])]], treated[paste0(varindex_grp[[2]])]-1, treated[paste0(varindex_grp[[2]])]+1), 1, 0),
match_3 = ifelse(between(.[[paste0(varindex_grp[[3]])]], treated[paste0(varindex_grp[[3]])]-1, treated[paste0(varindex_grp[[3]])]+1), 1, 0),
match_4 = ifelse(between(.[[paste0(varindex_grp[[4]])]], treated[paste0(varindex_grp[[4]])]-1, treated[paste0(varindex_grp[[4]])]+1), 1, 0),
match_5 = ifelse(between(.[[paste0(varindex_grp[[5]])]], treated[paste0(varindex_grp[[5]])]-1, treated[paste0(varindex_grp[[5]])]+1), 1, 0),
match_6 = ifelse(between(.[[paste0(varindex_grp[[6]])]], treated[paste0(varindex_grp[[6]])]-1, treated[paste0(varindex_grp[[6]])]+1), 1, 0),
match_7 = ifelse(between(.[[paste0(varindex_grp[[7]])]], treated[paste0(varindex_grp[[7]])]-1, treated[paste0(varindex_grp[[7]])]+1), 1, 0),
match_8 = ifelse(between(.[[paste0(varindex_grp[[8]])]], treated[paste0(varindex_grp[[8]])]-1, treated[paste0(varindex_grp[[8]])]+1), 1, 0),
match_number = rowSums(across('match_1':'match_8'), na.rm = T))
find_city <- function(treated, control) {
control %<>%
mutate(match_1 = ifelse(.[[paste0(varindex_grp[[1]])]] %in% c(treated[paste0(varindex_grp[[1]])]-1:treated[paste0(varindex_grp[[1]])]+1), 1, 0))}
city <- cities[[i]]
control_for_city <- control
control_city <- find_city(city, control_for_city)
find_city <- function(treated, control) {
control %<>%
mutate(match_1 = ifelse(.[[paste0(varindex_grp[[1]])]] %in% c(c(treated[paste0(varindex_grp[[1]])]-1):c(treated[paste0(varindex_grp[[1]])]+1)), 1, 0))}
city <- cities[[i]]
control_for_city <- control
control_city <- find_city(city, control_for_city)
city[paste0(varindex_grp[[1]])]
city[1, paste0(varindex_grp[[1]])]
varindex
varindex_grp
find_city <- function(treated, control) {
control %<>%
mutate(m1 = ifelse(between(pop_tot_grp, (treated$pop_tot_grp - 1), (treated$pop_tot_grp + 1)), 1, 0))
}
city <- cities[[i]]
control_for_city <- control
control_city <- find_city(city, control_for_city)
control_city %>% View()
find_city <- function(treated, control) {
control %<>%
mutate(m1 = ifelse(between(pop_tot_grp, (treated$pop_tot_grp - 1), (treated$pop_tot_grp + 1)), 1, 0),
m2 = ifelse(between(pct_whi_grp, (treated$pct_whi_grp - 1), (treated$pct_whi_grp + 1)), 1, 0),
m3 = ifelse(between(pct_college_grp, (treated$pct_college_grp - 1), (treated$pct_college_grp + 1)), 1, 0),
m4 = ifelse(between(med_inc_grp, (treated$med_inc_grp - 1), (treated$med_inc_grp + 1)), 1, 0),
m5 = ifelse(between(pct_h_rent_grp, (treated$pct_h_rent_grp - 1), (treated$pct_h_rent_grp + 1)), 1, 0),
m6 = ifelse(between(pct_h_multi_3more_grp, (treated$pct_h_multi_3more_grp - 1), (treated$pct_h_multi_3more_grp + 1)), 1, 0),
m7 = ifelse(between(med_val_grp, (treated$med_val_grp - 1), (treated$med_val_grp + 1)), 1, 0),
m8 = ifelse(between(med_rent_grp, (treated$med_rent_grp - 1), (treated$med_rent_grp + 1)), 1, 0),
match_number = rowSums(across('m1':'m8'), na.rm = T))
}
cities <- split(treated, f = treated$name)
control_list <- list()
for (i in 1:length(cities)) {
city <- cities[[i]]
control_for_city <- control
control_city <- find_city(city, control_for_city)
control_city %<>%
filter(match_number >= 5)
control_list[[i]] <- control_city
names(control_list)[[i]] <- names(cities)[[i]]
}
control_list
cities <- split(treated, f = treated$name)
control_list <- list()
for (i in 1:length(cities)) {
city <- cities[[i]]
control_for_city <- control
control_city <- find_city(city, control_for_city)
max_match = max(control_city$match_number)
if (max_match >= 5) {
control_city %<>%
filter(match_number >= 5) } else {
control_city %<>%
filter(match_number == max_match)
}
control_list[[i]] <- control_city
names(control_list)[[i]] <- names(cities)[[i]]
}
control_list
cities
names(cities)
