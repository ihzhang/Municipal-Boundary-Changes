select(c(1:6), blkid, plid)
return(test)
}
contig <- data.table::rbindlist(datalist)
readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", baseline_year, "pl_90pct.csv"))
stopCluster(cl)
state_code <- state_codes[[4]]
end_year <- baseline_year + 1
blocks <- st_read(paste0("SHP_blk_0010/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_tabblock.shp")) %>%
st_transform(., 3488) %>%
mutate(area_blk = st_area(.))
blocks %<>%
mutate(blkid = paste0(str_pad(as.character(STATEFP00), 2, side = "left", pad = "0"), str_pad(as.character(COUNTYFP00), 3, side = "left", pad = "0"),
str_pad(as.character(TRACTCE00), 6, side = "left", pad = "0"), str_pad(as.character(BLOCKCE00), 4, side = "left", pad = "0"))) %>%
filter(!duplicated(blkid))
place_file_baseline <- paste0("SHP_pl/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_place.shp")
if (state_code == "HI_15" & end_year == 2007) {
places <- st_read(place_file_baseline) %>%
st_set_crs(., 4135) %>%
st_transform(., 3488)
} else {
places <- st_read(place_file_baseline) %>%
st_transform(., 3488)
}
places %<>%
mutate(plid = paste0(
str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
datalist <- list()
places_df <- split(places, f = unique(places$plid))
cl <- makeCluster(3)
registerDoParallel(cl)
getDoParWorkers()
datalist <- foreach (i = 1:length(places_df),
.packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
p1 <- st_as_sf(places_df[[i]])
p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
blkids <- blocks %>% filter(blkid %in% test$blkid)
area_int <- st_intersection(blkids, p1) %>%
mutate(area_int = st_area(.),
pct_int = (area_int/area_blk)*100,
pct_int = as.numeric(pct_int)) %>%
filter(pct_int >= 90)
test$plid <- p1$plid
test %<>%
filter(blkid %in% area_int$blkid) %>%
select(c(1:6), blkid, plid)
return(test)
}
contig <- data.table::rbindlist(datalist)
readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", baseline_year, "pl_90pct.csv"))
stopCluster(cl)
state_code <- state_codes[[5]]
end_year <- baseline_year + 1
blocks <- st_read(paste0("SHP_blk_0010/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_tabblock.shp")) %>%
st_transform(., 3488) %>%
mutate(area_blk = st_area(.))
blocks %<>%
mutate(blkid = paste0(str_pad(as.character(STATEFP00), 2, side = "left", pad = "0"), str_pad(as.character(COUNTYFP00), 3, side = "left", pad = "0"),
str_pad(as.character(TRACTCE00), 6, side = "left", pad = "0"), str_pad(as.character(BLOCKCE00), 4, side = "left", pad = "0"))) %>%
filter(!duplicated(blkid))
place_file_baseline <- paste0("SHP_pl/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_place.shp")
if (state_code == "HI_15" & end_year == 2007) {
places <- st_read(place_file_baseline) %>%
st_set_crs(., 4135) %>%
st_transform(., 3488)
} else {
places <- st_read(place_file_baseline) %>%
st_transform(., 3488)
}
places %<>%
mutate(plid = paste0(
str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
datalist <- list()
places_df <- split(places, f = unique(places$plid))
cl <- makeCluster(3)
registerDoParallel(cl)
getDoParWorkers()
datalist <- foreach (i = 1:length(places_df),
.packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
p1 <- st_as_sf(places_df[[i]])
p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
blkids <- blocks %>% filter(blkid %in% test$blkid)
area_int <- st_intersection(blkids, p1) %>%
mutate(area_int = st_area(.),
pct_int = (area_int/area_blk)*100,
pct_int = as.numeric(pct_int)) %>%
filter(pct_int >= 90)
test$plid <- p1$plid
test %<>%
filter(blkid %in% area_int$blkid) %>%
select(c(1:6), blkid, plid)
return(test)
}
contig <- data.table::rbindlist(datalist)
readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", baseline_year, "pl_90pct.csv"))
stopCluster(cl)
state_code <- state_codes[[6]]
end_year <- baseline_year + 1
blocks <- st_read(paste0("SHP_blk_0010/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_tabblock.shp")) %>%
st_transform(., 3488) %>%
mutate(area_blk = st_area(.))
blocks %<>%
mutate(blkid = paste0(str_pad(as.character(STATEFP00), 2, side = "left", pad = "0"), str_pad(as.character(COUNTYFP00), 3, side = "left", pad = "0"),
str_pad(as.character(TRACTCE00), 6, side = "left", pad = "0"), str_pad(as.character(BLOCKCE00), 4, side = "left", pad = "0"))) %>%
filter(!duplicated(blkid))
place_file_baseline <- paste0("SHP_pl/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_place.shp")
if (state_code == "HI_15" & end_year == 2007) {
places <- st_read(place_file_baseline) %>%
st_set_crs(., 4135) %>%
st_transform(., 3488)
} else {
places <- st_read(place_file_baseline) %>%
st_transform(., 3488)
}
places %<>%
mutate(plid = paste0(
str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
datalist <- list()
places_df <- split(places, f = unique(places$plid))
cl <- makeCluster(3)
registerDoParallel(cl)
getDoParWorkers()
datalist <- foreach (i = 1:length(places_df),
.packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
p1 <- st_as_sf(places_df[[i]])
p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
blkids <- blocks %>% filter(blkid %in% test$blkid)
area_int <- st_intersection(blkids, p1) %>%
mutate(area_int = st_area(.),
pct_int = (area_int/area_blk)*100,
pct_int = as.numeric(pct_int)) %>%
filter(pct_int >= 90)
test$plid <- p1$plid
test %<>%
filter(blkid %in% area_int$blkid) %>%
select(c(1:6), blkid, plid)
return(test)
}
contig <- data.table::rbindlist(datalist)
readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", baseline_year, "pl_90pct.csv"))
stopCluster(cl)
state_code <- state_codes[[7]]
end_year <- baseline_year + 1
blocks <- st_read(paste0("SHP_blk_0010/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_tabblock.shp")) %>%
st_transform(., 3488) %>%
mutate(area_blk = st_area(.))
blocks %<>%
mutate(blkid = paste0(str_pad(as.character(STATEFP00), 2, side = "left", pad = "0"), str_pad(as.character(COUNTYFP00), 3, side = "left", pad = "0"),
str_pad(as.character(TRACTCE00), 6, side = "left", pad = "0"), str_pad(as.character(BLOCKCE00), 4, side = "left", pad = "0"))) %>%
filter(!duplicated(blkid))
place_file_baseline <- paste0("SHP_pl/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_place.shp")
if (state_code == "HI_15" & end_year == 2007) {
places <- st_read(place_file_baseline) %>%
st_set_crs(., 4135) %>%
st_transform(., 3488)
} else {
places <- st_read(place_file_baseline) %>%
st_transform(., 3488)
}
places %<>%
mutate(plid = paste0(
str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
datalist <- list()
places_df <- split(places, f = unique(places$plid))
cl <- makeCluster(3)
registerDoParallel(cl)
getDoParWorkers()
datalist <- foreach (i = 1:length(places_df),
.packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
p1 <- st_as_sf(places_df[[i]])
p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
blkids <- blocks %>% filter(blkid %in% test$blkid)
area_int <- st_intersection(blkids, p1) %>%
mutate(area_int = st_area(.),
pct_int = (area_int/area_blk)*100,
pct_int = as.numeric(pct_int)) %>%
filter(pct_int >= 90)
test$plid <- p1$plid
test %<>%
filter(blkid %in% area_int$blkid) %>%
select(c(1:6), blkid, plid)
return(test)
}
contig <- data.table::rbindlist(datalist)
readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", baseline_year, "pl_90pct.csv"))
stopCluster(cl)
state_code <- state_codes[[8]]
end_year <- baseline_year + 1
blocks <- st_read(paste0("SHP_blk_0010/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_tabblock.shp")) %>%
st_transform(., 3488) %>%
mutate(area_blk = st_area(.))
blocks %<>%
mutate(blkid = paste0(str_pad(as.character(STATEFP00), 2, side = "left", pad = "0"), str_pad(as.character(COUNTYFP00), 3, side = "left", pad = "0"),
str_pad(as.character(TRACTCE00), 6, side = "left", pad = "0"), str_pad(as.character(BLOCKCE00), 4, side = "left", pad = "0"))) %>%
filter(!duplicated(blkid))
place_file_baseline <- paste0("SHP_pl/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_place.shp")
if (state_code == "HI_15" & end_year == 2007) {
places <- st_read(place_file_baseline) %>%
st_set_crs(., 4135) %>%
st_transform(., 3488)
} else {
places <- st_read(place_file_baseline) %>%
st_transform(., 3488)
}
places %<>%
mutate(plid = paste0(
str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
datalist <- list()
places_df <- split(places, f = unique(places$plid))
cl <- makeCluster(3)
registerDoParallel(cl)
getDoParWorkers()
datalist <- foreach (i = 1:length(places_df),
.packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
p1 <- st_as_sf(places_df[[i]])
p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
blkids <- blocks %>% filter(blkid %in% test$blkid)
area_int <- st_intersection(blkids, p1) %>%
mutate(area_int = st_area(.),
pct_int = (area_int/area_blk)*100,
pct_int = as.numeric(pct_int)) %>%
filter(pct_int >= 90)
test$plid <- p1$plid
test %<>%
filter(blkid %in% area_int$blkid) %>%
select(c(1:6), blkid, plid)
return(test)
}
contig <- data.table::rbindlist(datalist)
readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", baseline_year, "pl_90pct.csv"))
stopCluster(cl)
state_code <- state_codes[[9]]
end_year <- baseline_year + 1
blocks <- st_read(paste0("SHP_blk_0010/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_tabblock.shp")) %>%
st_transform(., 3488) %>%
mutate(area_blk = st_area(.))
blocks %<>%
mutate(blkid = paste0(str_pad(as.character(STATEFP00), 2, side = "left", pad = "0"), str_pad(as.character(COUNTYFP00), 3, side = "left", pad = "0"),
str_pad(as.character(TRACTCE00), 6, side = "left", pad = "0"), str_pad(as.character(BLOCKCE00), 4, side = "left", pad = "0"))) %>%
filter(!duplicated(blkid))
place_file_baseline <- paste0("SHP_pl/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_place.shp")
if (state_code == "HI_15" & end_year == 2007) {
places <- st_read(place_file_baseline) %>%
st_set_crs(., 4135) %>%
st_transform(., 3488)
} else {
places <- st_read(place_file_baseline) %>%
st_transform(., 3488)
}
places %<>%
mutate(plid = paste0(
str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
datalist <- list()
places_df <- split(places, f = unique(places$plid))
cl <- makeCluster(3)
registerDoParallel(cl)
getDoParWorkers()
datalist <- foreach (i = 1:length(places_df),
.packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
p1 <- st_as_sf(places_df[[i]])
p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
blkids <- blocks %>% filter(blkid %in% test$blkid)
area_int <- st_intersection(blkids, p1) %>%
mutate(area_int = st_area(.),
pct_int = (area_int/area_blk)*100,
pct_int = as.numeric(pct_int)) %>%
filter(pct_int >= 90)
test$plid <- p1$plid
test %<>%
filter(blkid %in% area_int$blkid) %>%
select(c(1:6), blkid, plid)
return(test)
}
contig <- data.table::rbindlist(datalist)
readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", baseline_year, "pl_90pct.csv"))
stopCluster(cl)
# 2008 blocks on 2008 and 2009 places ----
state_codes <- c("HI_15", "IA_19", "ID_16", "IL_17", "IN_18",
"KS_20", "KY_21", "LA_22", "MD_24",
"MI_26", "MN_27", "MS_28", "MO_29", "MT_30",
"NC_37", "ND_38", "NE_31", "NM_35", "NV_32",
"OH_39", "OK_40", "OR_41",
"SC_45", "SD_46", "TN_47", "TX_48", "UT_49", "VA_51",
"WA_53", "WV_54", "WI_55", "WY_56"
)
get_block_ids <- function (state_code, baseline_year) {
end_year <- baseline_year + 1
blocks <- st_read(paste0("SHP_blk_0010/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_tabblock.shp")) %>%
st_transform(., 3488) %>%
mutate(area_blk = st_area(.))
blocks %<>%
mutate(blkid = paste0(str_pad(as.character(STATEFP00), 2, side = "left", pad = "0"), str_pad(as.character(COUNTYFP00), 3, side = "left", pad = "0"),
str_pad(as.character(TRACTCE00), 6, side = "left", pad = "0"), str_pad(as.character(BLOCKCE00), 4, side = "left", pad = "0"))) %>%
filter(!duplicated(blkid))
place_file_baseline <- paste0("SHP_pl/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_place.shp")
if (state_code == "HI_15" & end_year == 2007) {
places <- st_read(place_file_baseline) %>%
st_set_crs(., 4135) %>%
st_transform(., 3488)
} else {
places <- st_read(place_file_baseline) %>%
st_transform(., 3488)
}
places %<>%
mutate(plid = paste0(
str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
datalist <- list()
places_df <- split(places, f = unique(places$plid))
cl <- makeCluster(3)
registerDoParallel(cl)
getDoParWorkers()
datalist <- foreach (i = 1:length(places_df),
.packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
p1 <- st_as_sf(places_df[[i]])
p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
blkids <- blocks %>% filter(blkid %in% test$blkid)
area_int <- st_intersection(blkids, p1) %>%
mutate(area_int = st_area(.),
pct_int = (area_int/area_blk)*100,
pct_int = as.numeric(pct_int)) %>%
filter(pct_int >= 90)
test$plid <- p1$plid
test %<>%
filter(blkid %in% area_int$blkid) %>%
select(c(1:6), blkid, plid)
return(test)
}
contig <- data.table::rbindlist(datalist)
readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", baseline_year, "pl_90pct.csv"))
stopCluster(cl)
rm(list=ls(name=foreach:::.foreachGlobals), pos=foreach:::.foreachGlobals)
# place_file_end <- paste0("SHP_pl/places/", end_year, "/tl_", end_year, "_", substr(state_code, 4, 5), "_place.shp")
# if (state_code == "HI_15" & end_year == 2007) {
#   places <- st_read(place_file_baseline) %>%
#     st_set_crs(., 4135) %>%
#     st_transform(., 3488)
# } else {
#   places <- st_read(place_file_baseline) %>%
#     st_transform(., 3488)
# }
#
# places %<>%
#   mutate(plid = paste0(
#     str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
#     str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
#
# datalist <- list()
# places_df <- split(places, f = unique(places$plid))
# cl <- makeCluster(3)
# registerDoParallel(cl)
# getDoParWorkers()
# datalist <- foreach (i = 1:length(places_df),
#                      .packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
#                        p1 <- st_as_sf(places_df[[i]])
#                        p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
#                        if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
#                        test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
#                        blkids <- blocks %>% filter(blkid %in% test$blkid)
#                        area_int <- st_intersection(blkids, p1) %>%
#                          mutate(area_int = st_area(.),
#                                 pct_int = (area_int/area_blk)*100,
#                                 pct_int = as.numeric(pct_int)) %>%
#                          filter(pct_int >= 90)
#                        test$plid <- p1$plid
#                        test %<>%
#                          filter(blkid %in% area_int$blkid) %>%
#                          select(c(1:6), blkid, plid)
#                        return(test)
#                      }
# contig <- data.table::rbindlist(datalist)
# readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", end_year, "pl_90pct.csv"))
#
# stopCluster(cl)
# rm(list=ls(name=foreach:::.foreachGlobals), pos=foreach:::.foreachGlobals)
}
for (state_code in state_codes) {
start_time <- Sys.time()
print(start_time)
get_block_ids(state_code = state_code, baseline_year = year)
print(state_code)
end_time <- Sys.time()
print(end_time - start_time)
print(end_time)
Sys.sleep(60)
}
str(baseline_year)
get_block_ids <- function (state_code, baseline_year) {
end_year <- (baseline_year + 1)
blocks <- st_read(paste0("SHP_blk_0010/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_tabblock.shp")) %>%
st_transform(., 3488) %>%
mutate(area_blk = st_area(.))
blocks %<>%
mutate(blkid = paste0(str_pad(as.character(STATEFP00), 2, side = "left", pad = "0"), str_pad(as.character(COUNTYFP00), 3, side = "left", pad = "0"),
str_pad(as.character(TRACTCE00), 6, side = "left", pad = "0"), str_pad(as.character(BLOCKCE00), 4, side = "left", pad = "0"))) %>%
filter(!duplicated(blkid))
place_file_baseline <- paste0("SHP_pl/", baseline_year, "/tl_", baseline_year, "_", substr(state_code, 4, 5), "_place.shp")
if (state_code == "HI_15" & end_year == 2007) {
places <- st_read(place_file_baseline) %>%
st_set_crs(., 4135) %>%
st_transform(., 3488)
} else {
places <- st_read(place_file_baseline) %>%
st_transform(., 3488)
}
places %<>%
mutate(plid = paste0(
str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
datalist <- list()
places_df <- split(places, f = unique(places$plid))
cl <- makeCluster(3)
registerDoParallel(cl)
getDoParWorkers()
datalist <- foreach (i = 1:length(places_df),
.packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
p1 <- st_as_sf(places_df[[i]])
p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
blkids <- blocks %>% filter(blkid %in% test$blkid)
area_int <- st_intersection(blkids, p1) %>%
mutate(area_int = st_area(.),
pct_int = (area_int/area_blk)*100,
pct_int = as.numeric(pct_int)) %>%
filter(pct_int >= 90)
test$plid <- p1$plid
test %<>%
filter(blkid %in% area_int$blkid) %>%
select(c(1:6), blkid, plid)
return(test)
}
contig <- data.table::rbindlist(datalist)
readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", baseline_year, "pl_90pct.csv"))
stopCluster(cl)
rm(list=ls(name=foreach:::.foreachGlobals), pos=foreach:::.foreachGlobals)
# place_file_end <- paste0("SHP_pl/places/", end_year, "/tl_", end_year, "_", substr(state_code, 4, 5), "_place.shp")
# if (state_code == "HI_15" & end_year == 2007) {
#   places <- st_read(place_file_baseline) %>%
#     st_set_crs(., 4135) %>%
#     st_transform(., 3488)
# } else {
#   places <- st_read(place_file_baseline) %>%
#     st_transform(., 3488)
# }
#
# places %<>%
#   mutate(plid = paste0(
#     str_pad(as.character(.[[1]]), 2, side = "left", pad = "0"),
#     str_pad(as.character(.[[2]]), 5, side = "left", pad = "0")))
#
# datalist <- list()
# places_df <- split(places, f = unique(places$plid))
# cl <- makeCluster(3)
# registerDoParallel(cl)
# getDoParWorkers()
# datalist <- foreach (i = 1:length(places_df),
#                      .packages = c("sf", "dplyr", "data.table", "readr", "magrittr")) %dopar% {
#                        p1 <- st_as_sf(places_df[[i]])
#                        p1blocks <- c(sf::st_contains(p1, blocks), sf::st_overlaps(p1, blocks))
#                        if(nrow(as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])) < 1) return(NULL)
#                        test <- as.data.frame(blocks[unique(c(p1blocks[[1]], p1blocks[[2]])),])
#                        blkids <- blocks %>% filter(blkid %in% test$blkid)
#                        area_int <- st_intersection(blkids, p1) %>%
#                          mutate(area_int = st_area(.),
#                                 pct_int = (area_int/area_blk)*100,
#                                 pct_int = as.numeric(pct_int)) %>%
#                          filter(pct_int >= 90)
#                        test$plid <- p1$plid
#                        test %<>%
#                          filter(blkid %in% area_int$blkid) %>%
#                          select(c(1:6), blkid, plid)
#                        return(test)
#                      }
# contig <- data.table::rbindlist(datalist)
# readr::write_csv(contig, file = paste0("spatial_files/", baseline_year, "/", state_code, "_block_plids_", baseline_year, "blk-", end_year, "pl_90pct.csv"))
#
# stopCluster(cl)
# rm(list=ls(name=foreach:::.foreachGlobals), pos=foreach:::.foreachGlobals)
}
year <- 2009
for (state_code in state_codes) {
start_time <- Sys.time()
print(start_time)
get_block_ids(state_code = state_code, baseline_year = year)
print(state_code)
end_time <- Sys.time()
print(end_time - start_time)
print(end_time)
Sys.sleep(60)
}
rm(list = ls())
